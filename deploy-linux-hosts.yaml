# - import_playbook: check-ifnames.yaml
- hosts: workstations-linux
  remote_user: root
  vars_files:
  - vars/network.yaml
  - vars/firewall.yaml
  - vars/node_exporter.yaml
  roles:
  # - { role: firewall, tags: firewall }
  - { role: node_exporter, tags: [ node_exporter, monitoring ] }

  handlers:
  - import_tasks: handlers/systemd.yaml

  # tasks:
  # - name: Устанавливаем полезные пакеты
  #   portage:
  #     package: "{{ item }}"
  #     state: present
  #   with_items:
  #   - app-misc/jq
  #   - app-admin/sudo
  #   - app-portage/genlop
  #   - app-portage/portage-utils
  #   - app-portage/smart-live-rebuild
  #   - app-portage/gentoolkit
  #   - app-portage/euses
  #   - app-portage/cpuid2cpuflags
  #   - app-admin/pydf
  #   - sys-process/htop
  #   - net-dns/bind-tools

  # - name: Установка и настройка zsh
  #   include_tasks: tasks/user/deploy-zsh.yaml

  # - name: Setup device names
  #   template:
  #     src: "templates/default/etc/udev/rules.d/00-network.rules.j2"
  #     dest: /etc/udev/rules.d/00-network.rules
  #     owner: root
  #     group: root
  #     mode: 0644
  #   notify:
  #   - restart networkd

  # - name: Setup network interface files
  #   include_tasks: tasks/systemd/network/setup-interface.yaml
  #   loop: "{{ network }}"
  #   loop_control:
  #     loop_var: target_interface

  # - name: Setup kernel scripts
  #   template:
  #     src: "templates/default/{{ item }}.j2"
  #     dest: "/{{ item }}"
  #     owner: root
  #     group: root
  #     mode: 0744
  #   loop:
  #   - usr/src/build.sh
  #   - usr/src/configure.sh

  # - name: Setup kernel options
  #   lineinfile:
  #     path: /usr/src/linux/.config
  #     regexp: '^(# )?{{ item.option }}='
  #     line: '{{ item.option }}={{ item.value }}'
  #     backup: yes
  #   loop:
  #     - { option: 'CONFIG_LOCALVERSION', value: '".Sheridan.home.{{ inventory_hostname }}"' }
  #     - { option: 'CONFIG_LOCALVERSION_AUTO', value: 'y' }
  #     - { option: 'CONFIG_DEFAULT_HOSTNAME', value: '"{{ inventory_hostname }}"' }

  # - name: Setup users
  #   user:
  #     name: "{{ item.name }}"
  #     password: "{{ item.password | password_hash('sha512', 'babylon5')}}"
  #     shell: /bin/zsh
  #     groups: "{{ item.groups|join(',') if item.name != 'root' else 'root' }}"
  #     expires: -1
  #     create_home: "{{ item.name != 'root' }}"
  #   loop: "{{ users }}"

  # - name: Adding keys to users
  #   authorized_key:
  #     user: "{{ item.0.name }}"
  #     key: '{{ item.1 }}'
  #     state: present
  #   loop: "{{ users|product(ssh_keys)|list }}"

  # - name: Configuring ssh server
  #   template:
  #     src: templates/default/etc/ssh/sshd_config.j2
  #     dest: /etc/ssh/sshd_config
  #     owner: root
  #     group: root
  #     mode: 0600
  #   notify:
  #   - restart sshd

  # - name: Configuring journald
  #   template:
  #     src: templates/default/etc/systemd/journald.conf.j2
  #     dest: /etc/systemd/journald.conf
  #     owner: root
  #     group: root
  #     mode: 0644
  #   notify:
  #   - restart journald

  # - name: Enabling services
  #   service:
  #     name: "{{ item }}"
  #     enabled: yes
  #   loop:
  #   - sshd
