---

  - name: "Iptables host->internet rule"
    iptables:
      chain: OUTPUT
      jump:             "{{ item.2.policy | default('ACCEPT') }}"
      ip_version:       "{{ item.3 }}"
      protocol:         "{{ item.4 }}"
      destination_port: "{{ item.2.ports | default('0:65535') }}"
      comment:          "[{{ target_hostname }}->internet] {{ item.2.name }} [{{ item.4 }}:{{ item.3 }}]"
      destination:      "{{ (item.2.destination|default(['0.0.0.0/0', '::/0']))|select('search', '\\:' if item.3 == 'ipv6' else '\\.')|list|join(',') }}"
      source:           "{{ item.1.ip[item.3].addr }}"
      out_interface:    "{{ item.0.ifname }}"
      match:            ["multiport"]
      # in_interface:     "{{ (hostvars['gate'].network|selectattr('ifname', 'match', 'internal.*')|first).ifname }}"
    when: target_hostvars.iptables                  is defined and
          target_hostvars.iptables.host_to_internet is defined and
          item.1.ip                                 is defined and
          item.1.ip[item.3]                         is defined and
          item.1.ip[item.3].addr                    is defined and
          (
            (":" in item.1.ip[item.3].addr and ":" in (item.2.destination|default(['0.0.0.0/0', '::/0']))|list|join(',') and item.3 == 'ipv6') or
            ("." in item.1.ip[item.3].addr and "." in (item.2.destination|default(['0.0.0.0/0', '::/0']))|list|join(',') and item.3 == 'ipv4')
          )
    notify:
    - "restart iptables.{{ item.3 }}"
    - finish iptables rules
    with_nested:
    - "{{ hostvars['gate'].network|selectattr('ifname', 'match', 'external.*')|list }}"
    - "{{ hostvars[target_hostname].network }}"
    - "{{ target_hostvars.iptables.host_to_internet }}"
    - [ 'ipv6', 'ipv4' ]
    - [ 'tcp', 'udp' ]
