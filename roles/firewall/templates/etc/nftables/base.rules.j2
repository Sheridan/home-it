{# filter, inet -#}
table inet filter {
  chain output {
    type filter hook output priority 0; policy accept;
    counter comment "count accepted packets"
  }

  chain forward {
    type filter hook forward priority 0; policy drop;
    counter comment "count dropped packets"
  }

  chain input {
    type filter hook input priority 0; policy drop;
    ct state {established, related} counter accept comment "accept all connections related to connections made by us"
    ct state invalid counter drop comment "drop invalid packets"
    {# bad tcp -> avoid network scanning -#}
    tcp flags & (fin|syn) == (fin|syn) counter drop comment "drop invalid packets"
    tcp flags & (syn|rst) == (syn|rst) counter drop comment "drop invalid packets"
    tcp flags & (fin|syn|rst|psh|ack|urg) < (fin) counter drop comment "drop invalid packets"
    tcp flags & (fin|syn|rst|psh|ack|urg) == (fin|psh|urg) counter drop comment "drop invalid packets"
    iif lo accept comment "accept loopback"
    iif != lo ip daddr 127.0.0.1/8 counter drop comment "drop connections to loopback not coming from loopback"
    iif != lo ip6 daddr ::1/128 counter drop comment "drop connections to loopback not coming from loopback"
    {% for icmp_ver in ['icmp', 'icmpv6'] -%}
    # ip protocol {{ icmp_ver }} accept comment "accept {{ icmp_ver }}"
    ip protocol {{ icmp_ver }} limit rate 32/second counter accept comment "accept {{ icmp_ver }}"
    ip protocol {{ icmp_ver }} counter drop comment "drop burst {{ icmp_ver }}"
    {# -#}
    {%- endfor -%}
    {# to_host -#}
    {% for rule_name in firewall.to_host|list -%}
        {%- set rule = firewall.to_host[rule_name] -%}
        {%- for protocol in ['tcp', 'udp'] -%}
            {%- for rule_interface_name_part in rule.interfaces -%}
                {%- for rule_interface in network|selectattr('ifname', 'match', '.*' + rule_interface_name_part + '.*')|list -%}
    {{ query('nft', 'as_iif', rule_interface) }} {{ protocol }} {% if 'ports' in rule -%} dport {{ query('nft', 'list_or_single', rule.ports) }} {%- endif %} counter accept comment "[->{{ inventory_hostname }}] {{ rule.name }} [{{ protocol }}]"
    {# -#}
              {%- endfor -%}
            {%- endfor -%}
        {%- endfor -%}
    {%- endfor -%}
    counter comment "count dropped packets"
  }
}
