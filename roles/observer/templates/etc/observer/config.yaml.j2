---
  debug: no

  session_storage:
    storage_folder: /var/lib/observer

  formatter:
    templates_path: /etc/observer/templates

  output:
    telegram:
      token: '{{ telegram.bots.logger.token }}'
      targets:
      - name: Observers
        destination:
          rooms:
          - '{{ telegram.chats.log.id }}'

  input:
    journald:
      rules:
      - name: interface_status
        match:
          positive: 'kernel: .+? (?P<interface>({%- for interface in network -%}{{ interface.ifname }}{{ '|' if not loop.last else '' }}{%- endfor -%})): (?P<event>.*)'
        outputs:
        - Observers
{% for entry in merged_vars.observer.entryes.journald %}
      - name: "{{ entry.name }}"
        outputs:
        - Observers
        match:
          positive: "{{ entry.match.positive }}"
          {% if 'negative' in entry.match -%} negative: "{{ entry.match.negative }}" {%- endif %}

{% endfor %}

    logfile:
      positions_file: {{ observer_positions_file }}
      rules:
      - name: emerge_download_start
        identifier: {{ inventory_hostname }}
        match:
          positive: ">>> Downloading '(?P<url>.+?)'"
        path: /var/log/emerge-fetch.log
        store_position: False
        outputs:
        - Observers
      - name: emerge_download_done
        identifier: sometest
        match:
          positive: '.+? .+? \((?P<avg_speed>.+?)\) - ‘(?P<file_location>.+?)’ saved \[(?P<file_size>.+?)/'
        path: /var/log/emerge-fetch.log
        store_position: False
        outputs:
        - Observers

  {% if observer_proxy is defined -%}
  proxy:
    host: '{{ observer_proxy.addr }}'
    port: {{ observer_proxy.port }}
    type: '{{ observer_proxy.proto }}'
  {# -#}
  {%- endif %}
