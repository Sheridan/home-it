---
  - name: Создаём пользователя
    user:
      name: "{{ merged_vars.factorio.user }}"
      comment: Factorio game user
      shell: /bin/false
      group: users
      create_home: no

  - name: Создаём каталоги
    file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ merged_vars.factorio.user }}"
      group: users
      mode: 0755
    loop:
      - "{{ merged_vars.factorio.paths.home }}"

  - name: Распаковываем factorio
    unarchive:
      src: "https://www.factorio.com/get-download/{{ merged_vars.factorio.version }}/headless/linux64"
      dest: "{{ merged_vars.factorio.paths.home }}/../"
      owner: "{{ merged_vars.factorio.user }}"
      group: users
      remote_src: yes
    notify:
    - restart factorio

  - name: Генерируем конфиг
    template:
      src: opt/factorio/server-settings.json.j2
      dest: /opt/factorio/server-settings.json
      owner: "{{ merged_vars.factorio.user }}"
      group: users
      mode: 0644
    notify:
    - restart factorio

  - name: deploy factorio start script
    template:
      src: opt/factorio/start.sh.j2
      dest: /opt/factorio/start.sh
      owner: "{{ merged_vars.factorio.user }}"
      group: users
      mode: 0755
    notify:
    - restart factorio

  - name: Install factorio daemon service
    template:
      src: etc/systemd/system/factorio.service.j2
      dest: /etc/systemd/system/factorio.service
      owner: root
      group: root
      mode: 0644
    notify:
    - systemd daemon reload
    - restart factorio

  - name: Устанавливаем моды
    include_role:
      name: factorio
      tasks_from: mod_install
    vars:
      mod: "{{ item }}"
    loop: "{{ merged_vars.factorio.mods }}"

  - name: Генерируем список модов
    template:
      src: opt/factorio/mods/mod-list.json.j2
      dest: /opt/factorio/mods/mod-list.json
      owner: "{{ merged_vars.factorio.user }}"
      group: users
      mode: 0644
    notify:
    - restart factorio

  - name: Enabling services
    service:
      name: factorio
      enabled: yes
