---
  - name: Устанавливаем необходимые пакеты
    include_tasks: "{{ ansible_distribution }}/packages.yaml"
    tags:
    - packages

  - name: Установка пользователя
    import_role:
      name: system_user
      tasks_from: setup_user
    vars:
      user:
        name: onvif
        comment: onvif daemon runner
        groups:
        - users

  - name: Установка сервиса
    include_role:
      name: systemd_unit
      tasks_from: setup_service
    vars:
      service:
        name: "onvif-daemon-{{ i_camera.name }}"
        description: "Onvif daemon of {{ i_camera.name }}"
        type: forking
        restart: on-failure
        user: onvif
        pid_file: "/run/onvif/onvif-{{ i_camera.name }}.pid"
        directoryes:
        - /run/onvif
        exec_start: >
          /usr/local/bin/onvif_srvd
          --pid_file /run/onvif/onvif-{{ i_camera.name }}.pid
          --port {{ i_camera.port }}
          --ifs ethernet_0
          --scope 'onvif://www.onvif.org/name/TestDev'
          --scope 'onvif://www.onvif.org/location/Unknow'
          --scope 'onvif://www.onvif.org/Profile/Streaming'
          --scope 'onvif://www.onvif.org/Profile/S'
          --name {{ i_camera.name }}_main
          --width {{ i_camera.width }}
          --height {{ i_camera.height }}
          --url '{{ i_camera.stream.main }}'
          --type {{ i_camera.type }}
        after:
        - network-online.target
        wanted_by:
        - multi-user.target
        on_changed: restarted
        state: started
        enabled: yes
    loop: "{{ onvif.cameras}}"
    loop_control:
        loop_var: i_camera
