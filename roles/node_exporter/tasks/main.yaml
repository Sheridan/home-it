---
  - name: Устанавливаем необходимые пакеты
    include_tasks: "{{ ansible_distribution }}/packages.yaml"
    tags:
    - packages

  - name: Определение имени юзера
    set_fact:
      f_node_exporter_user: "{{ 'node_exporter' if ansible_distribution == 'Gentoo' else 'prometheus' }}"
      f_node_exporter_binary: "{{ '/usr/bin/node_exporter' if ansible_distribution == 'Gentoo' else '/usr/bin/prometheus-node-exporter' }}"

  - name: create dirs for node_exporter
    file:
      dest: "{{ item }}"
      state: directory
      owner: "{{ dist_difference.node_exporter.user[ansible_distribution] }}"
    with_items:
      - /var/lib/node_exporter/textfile_collector

  - name: Creating collectors lists
    set_fact:
      enabled_collectors: "{{ prepared_enabled_collectors | map('regex_replace', '(.*)', '--collector.\\1') | list | join(' ')}}"
      disabled_collectors: "{{ node_exporter_all_collectors|difference(prepared_enabled_collectors) | sort | unique | map('regex_replace', '(.*)', '--no-collector.\\1') | list | join(' ') }}"
    vars:
      prepared_enabled_collectors: "{{ merged_vars.node_exporter.collectors.enabled | sort | unique }}"

  - name: Install node_exporter service
    import_role:
      name: systemd_unit
      tasks_from: setup_service
    vars:
      service:
        name: node_exporter
        description: Node exporter service
        restart: on-failure
        user: "{{ dist_difference.node_exporter.user[ansible_distribution] }}"
        exec_start: >
          {{ dist_difference.node_exporter.binary_path[ansible_distribution] }}
          {{ enabled_collectors }}
          {{ disabled_collectors }}
          --web.listen-address=[::]:{{ merged_vars.node_exporter.listen.port }}
          --collector.diskstats.ignored-devices="^(ram|loop|fd)\d+$"
          --collector.filesystem.ignored-mount-points="^/(sys|proc|dev|run)($|/)"
          --collector.systemd.enable-start-time-metrics
          --collector.systemd.enable-restarts-metrics
          --collector.systemd.enable-task-metrics
          --collector.textfile.directory="{{ merged_vars.node_exporter.textfile_dir }}/"
        after:
        - network-online.target
        wanted_by:
        - multi-user.target
        on_changed: restarted
        state: started
        enabled: yes

  - name: Connect exporter to prometheus
    import_role:
      name: prometheus
      tasks_from: connect_exporter
    vars:
      target:
        name: "{{ inventory_hostname }}_node_exporter"
        addr: "{{ '[::1]' if inventory_hostname == 'gate' else inventory_hostname }}"
        port: "{{ merged_vars.node_exporter.listen.port }}"
        job: node_exporter
